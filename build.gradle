import com.moowork.gradle.node.task.NodeTask

buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: "com.moowork.node"

jar {
	baseName = 'springbootwebsockets'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile("org.springframework.boot:spring-boot-devtools")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


task webpack(type: NodeTask, dependsOn: 'npmInstall') {
	def osName = System.getProperty("os.name").toLowerCase();
	if (osName.contains("windows")) {
		script = project.file('node_modules/webpack/bin/webpack.js')
	} else {
		script = project.file('node_modules/.bin/webpack')
	}
}

processResources.dependsOn 'webpack'

clean.delete << file('node_modules')
clean.delete << file('src/main/webapp/dist')
